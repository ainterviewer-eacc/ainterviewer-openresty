---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by XPK.
--- DateTime: 2023/12/28 20:19
---
local SessionInfoDao = require("dao.db_ai_interview.session_info_dao")
local QuestionInfoDao = require("dao.db_ai_interview.question_info_dao")

local args = ngx.req.get_uri_args()
local session_id = args.session_id
syncutil.check_params_http(1, session_id)

local session_info = SessionInfoDao.query_session_info({"*"},{session_id = session_id, status = 1})
if not session_info or not next(session_info) then
    syncutil.exit_http(200, errcode.INTERNAL_ERROR, "internal server error.")
end

local topic_list = cjson_safe.decode(session_info[1].topic_list)
if not topic_list then
    syncutil.exit_http(200, errcode.INTERNAL_ERROR, "internal server error.")
end
local topic_index = math.random(1, #topic_list)
local topic = topic_list[topic_index]
-- 调用gpt
local ret, err, interview_question = gpt_agent_proxy.gen_question_stream(topic, {}, 0)
nlog.info("interview_question = " .. cjson.encode(interview_question))
if ret ~= 0 then
    syncutil.exit_http(200, ret, err)
end

local question_id = string_util.luuid()
QuestionInfoDao.insert_question_info({
    session_id = session_id,
    question_id = question_id,
    question = interview_question,
    answer = '',
    topic = topic,

})

local data = {
    question_id = question_id,
    current_topic = topic,
    interview_question = interview_question,
}

ngx.print('\r\n\r\n')
ngx.print(cjson.encode(data))
ngx.exit(200)
